import os
import re
import glob
import matplotlib.pyplot as plt
import matplotlib.font_manager as font_manager
import numpy as np

font_path = './gillsans.ttf'
font_prop = font_manager.FontProperties(fname=font_path, size=18)

# AMG, MILC, deepCAM, nanoGPT
colors = ['#D55E00', '#0072B2', '#009E73', '#000000', '#800080', '#CC79A7', '#E69F00', '#56B4E9']
markers = ['o', 's', 'd', '^']
apps_dict = {
    'AMG2023': 0,
    'MILC': 1,
    'deepCAM': 2,
    'nanoGPT': 3
}


x_vals = [14, 6, 17, 7, 11, 8, 16, 18, 8, 3, 11, 12, 2, 5, 2, 11, 8, 6, 4, 3, 10, 16, 19, 5, 8, 6, 6, 20, 9, 19, 19, 11, 5, 3, 16, 10, 18, 3, 18, 13, 21, 3, 22, 5, 2, 8, 12, 14, 15, 11, 17, 17, 19, 17, 7, 12, 12, 8, 7, 9, 7, 5, 8, 13, 12, 19, 12, 6, 6, 5, 13, 18, 10, 6, 7, 17, 8, 9, 9, 2, 10, 11, 17, 12, 9, 4, 10, 16, 5, 14, 5, 6, 9, 11, 4, 5, 15, 6, 5, 3, 9, 6, 10, 23, 3, 7, 11, 7, 3, 3, 9, 3, 16, 4, 11, 4, 15, 9, 6, 2, 5, 15, 2, 15, 5, 4, 2, 5, 8, 15, 17, 4, 4, 13, 3, 11, 6, 10, 11, 16, 8, 12, 14, 14, 5]

y_vals = [267.89935, 267.20660000000004, 305.25325000000004, 277.82584, 269.91821, 277.67884000000004, 271.3272999999999, 276.01910000000004, 270.80523, 275.69840999999997, 274.09787, 281.72954999999996, 269.53861, 277.87915999999996, 268.2242, 281.7237, 269.96040999999997, 276.91191, 268.00678000000005, 277.71180000000004, 278.9607899999999, 288.06521000000004, 278.07746999999995, 268.74118, 282.01726999999994, 279.27177, 268.51782000000003, 278.55181, 276.78535999999997, 277.78692, 270.9320000000001, 278.62697, 282.00543, 274.96274, 315.23777999999993, 267.34400000000005, 267.48587, 276.81373, 275.22048, 276.51277000000005, 272.25039000000004, 277.39646999999997, 276.93143000000003, 267.62281, 267.13847999999996, 277.11379999999997, 277.23839000000004, 277.7246499999999, 339.20984, 277.26055, 313.50855000000007, 281.0762199999999, 365.5164699999999, 275.12374, 281.1587799999999, 268.95180999999997, 309.0805500000002, 276.99818, 276.85927000000004, 267.87953000000005, 278.60828, 267.79837000000003, 277.61343, 281.27117, 277.18848, 312.55001, 279.10085, 268.7537299999999, 268.42190000000005, 277.73260999999997, 276.2956700000001, 311.38606, 271.7945, 277.58557999999994, 281.8213799999999, 283.16381, 277.10171, 268.84241000000003, 315.46349999999995, 277.34963, 477.56216999999987, 268.53619, 275.88648, 277.4891700000001, 267.88359, 274.17940000000004, 276.5317600000001, 277.15433, 269.67927000000003, 310.91860999999994, 277.56969, 277.44936, 275.38795000000005, 277.70417999999995, 276.10958, 268.52004999999997, 278.77607, 278.40447000000006, 268.17388, 267.69662, 280.09772, 267.73893999999996, 269.53022000000004, 316.56845999999985, 277.53060999999997, 279.49533999999994, 291.2709699999999, 267.1496199999999, 279.08582, 276.50167999999996, 267.35471, 267.60898, 340.94229, 315.79449, 277.85997999999995, 267.64968999999996, 313.35811000000007, 311.42174000000006, 276.37537, 270.05192000000005, 277.79149, 277.0944, 267.76698, 268.64763999999997, 275.94912, 274.7956100000001, 267.27146999999997, 271.35388, 316.62571999999994, 271.19619000000006, 277.95130000000006, 311.55543999999986, 285.9541, 285.68789999999996, 278.08594999999997, 278.99186000000003, 267.61004, 268.47346000000005, 277.50953, 343.51277999999996, 270.46108000000004, 279.023, 276.41794000000004, 267.67866000000004, 270.14838000000003]

max_index = np.argmax(y_vals)
y_vals = np.delete(y_vals, max_index)
x_vals = np.delete(x_vals, max_index)

y_max = min(y_vals)
y_vals = np.array(y_vals) / y_max

# Update y-axis label for the plot
plt.figure(figsize=(6, 4), dpi=120)
plt.scatter(x_vals, y_vals, s=80, facecolor='none', edgecolor=colors[apps_dict['nanoGPT']], 
           marker=markers[apps_dict['nanoGPT']], linewidth=2)
# plt.ylim(250, 500)
plt.xlabel("Number of distinct dragonfly groups", fontproperties=font_prop, fontsize=20)
plt.ylabel("Relative performance", fontproperties=font_prop, fontsize=20)
plt.title("Dragonfly groups vs. nanoGPT perf.\n(Perlmutter)", fontproperties=font_prop, fontsize=22)
plt.xticks(fontsize=18)
ylabel = [1, 1.1, 1.2, 1.3, 1.4]
plt.yticks(ticks=ylabel, labels=ylabel, fontproperties=font_prop, fontsize=18)
plt.grid(True, axis='y', linestyle='--')  # Changed to horizontal dashed grid lines only
# Set x-axis ticks with step size of 1
min_x, max_x = min(x_vals), max(x_vals)
plt.xticks(range(min_x, max_x + 1, 2))
plt.tight_layout()

# plt.savefig("group_vs_time_nanogpt_pm" + '64' + ".png", dpi=300)
plt.savefig("group_vs_time_nanogpt_pm" + '64' + ".pdf")

##################### frontier #########################################################

# nanogpt
# x_vals = [33, 19, 20, 49, 25, 19, 64, 50, 6, 52, 26, 64, 64, 15, 50, 64, 40, 22, 64, 43, 12, 30, 20, 25, 23, 44, 38, 18, 31, 38, 18, 37, 64, 30, 45, 64, 31, 16, 56, 63, 14, 1, 31, 10, 42, 64, 30, 30, 15, 14, 9, 57, 13, 19, 35, 17, 1, 36, 44, 1, 19, 9, 27, 55, 60, 64, 31, 64, 5, 28, 21, 12, 64, 52, 22, 28, 15, 64, 1, 63, 14, 64, 45, 8, 1, 42, 18, 8, 64, 16, 15, 15, 20, 52, 19, 7, 24, 47, 34, 52, 52, 8]
# y_vals = [766.56634, 764.00654, 767.05308, 772.78297, 769.11716, 767.5061599999999, 775.6949899999998, 777.8164600000001, 765.1050700000002, 771.22587, 772.40177, 780.3714299999999, 772.4287899999999, 762.01557, 771.1840100000002, 775.2194400000001, 772.7259000000001, 777.5981899999999, 776.7500600000003, 781.98775, 771.7159699999999, 783.7348499999999, 777.6246500000001, 766.88847, 767.8081200000001, 771.9586599999998, 774.2557699999999, 773.1155600000001, 770.0319, 774.6439199999998, 772.8752299999999, 772.7210699999999, 779.3643800000002, 777.5163499999999, 769.0104199999998, 775.7543, 803.4364899999999, 771.00454, 779.2740500000002, 768.3755100000002, 769.1785399999999, 761.5058700000001, 793.3585800000001, 763.6874100000001, 776.8791300000003, 771.8020300000002, 766.1461499999999, 772.3220999999999, 767.14775, 768.1308100000001, 769.7844200000001, 770.6761600000001, 773.6842999999999, 771.83608, 775.5162400000002, 768.5777800000001, 764.0505899999999, 772.8830899999998, 781.5438100000001, 766.81183, 775.9714600000001, 766.82117, 769.9260899999998, 776.39856, 796.02999, 765.16065, 774.8874900000002, 771.7276900000003, 768.29521, 770.2809199999999, 772.4157100000002, 782.2516400000001, 779.8876399999999, 777.5117100000001, 772.46428, 772.8135000000002, 768.1679200000002, 771.2528000000001, 764.8441199999999, 770.4463800000002, 780.5927100000004, 780.58829, 772.4074700000001, 764.42828, 766.5665, 774.4998999999998, 769.8330400000002, 763.8456799999999, 772.9407000000001, 769.45571, 771.57725, 770.42125, 779.4316100000002, 776.8177800000002, 773.7799800000001, 769.0196299999999, 771.5472900000002, 774.97976, 772.7083399999997, 775.21965, 769.00296, 768.87871]
# deepcam
x_vals = [23, 21, 64, 30, 64, 53, 27, 34, 18, 22, 64, 42, 17, 9, 27, 64, 13, 30, 23, 64, 54, 23, 50, 28, 64, 54, 25, 60, 27, 27, 64, 64, 64, 32, 52, 44, 24, 17, 35, 8, 36, 38, 29, 64, 9, 27, 57, 63, 26, 15, 14, 25, 48, 23, 18, 64, 44, 63, 16, 64, 24, 1, 31, 61, 41, 64, 29, 48, 45, 20, 1, 36, 15, 23, 37, 27, 43, 26, 10, 10, 15, 19, 64, 60, 64, 22, 64, 41, 1, 64, 10, 41, 15, 11, 7, 62, 1, 13, 19, 31, 21, 63, 1, 25, 58, 28, 39, 1, 9, 13, 42, 36, 9, 63, 38, 64, 64, 16, 19, 31]
y_vals = [737.2039900000004, 586.89189, 674.6872900000003, 614.4290400000009, 663.33519, 614.1042399999999, 594.5149800000003, 595.8082800000003, 590.3586999999999, 604.4875300000004, 603.6798899999999, 675.8829600000001, 611.6743200000005, 668.0774699999993, 677.7239700000001, 651.0115900000001, 619.43694, 592.5287800000001, 599.1918600000008, 612.7776499999997, 622.8081099999997, 607.0505899999997, 663.2586600000003, 613.2106300000005, 586.67681, 636.4923199999996, 778.9835499999997, 1367.6154400000014, 608.64819, 898.0060499999994, 705.0091900000003, 633.1961500000002, 1014.8516900000002, 619.3989799999996, 611.0514300000001, 616.6019200000004, 843.1227899999994, 650.6934400000006, 607.5935300000002, 591.0110600000005, 699.9784300000007, 612.8958000000003, 614.3450500000006, 604.7928900000003, 597.0695400000001, 628.1473700000006, 835.382359999999, 598.5956700000002, 707.429409999999, 588.1184500000003, 619.2147700000004, 621.0634400000004, 646.5570700000002, 1477.1813800000004, 575.74779, 714.5715000000002, 611.5964300000004, 612.9215600000003, 641.0390299999998, 898.1873399999997, 589.0752299999999, 585.5874499999995, 926.0431999999995, 643.1674500000001, 589.4128999999996, 621.6540600000003, 610.0176799999992, 645.6839499999999, 650.4415199999997, 596.0068299999998, 1234.3600700000004, 694.2018499999999, 608.2357100000007, 612.00445, 705.9334199999992, 684.2635400000005, 651.2271499999998, 731.9810400000001, 1026.1389500000005, 861.8991300000002, 590.1896600000002, 659.1727099999997, 598.7567700000004, 1023.1029399999998, 611.0457900000005, 628.3237300000001, 2420.976529999998, 743.9327099999999, 1405.768379999998, 630.2911299999994, 602.5542100000002, 1119.5017799999998, 594.1204600000001, 596.8621900000002, 591.941539999999, 615.7942, 655.8004499999997, 574.8857899999999, 665.9740700000004, 485.17474999999996, 850.5179999999999, 589.5191200000005, 595.4150000000001, 1056.8968200000008, 603.42002, 633.6361299999999, 622.8129699999998, 756.5316699999996, 593.14742, 610.4011200000002, 688.0218900000001, 1157.5842400000008, 1016.0445699999993, 621.9522900000004, 706.89615, 587.1136700000001, 597.958820000001, 901.3248299999987, 640.1586800000003, 712.5707400000001]

max_index = np.argmax(y_vals)
y_vals = np.delete(y_vals, max_index)
x_vals = np.delete(x_vals, max_index)

y_max = min(y_vals)
y_vals = np.array(y_vals) / y_max

# Update y-axis label for the plot
plt.figure(figsize=(6, 4), dpi=120)
plt.scatter(x_vals, y_vals, s=80, facecolor='none', edgecolor=colors[apps_dict['deepCAM']], 
           marker=markers[apps_dict['deepCAM']], linewidth=2)
# plt.ylim(500, 2500)
plt.xlabel("Number of distinct dragonfly groups", fontproperties=font_prop, fontsize=20)
plt.ylabel("Relative performance", fontproperties=font_prop, fontsize=20)
plt.ylim(0.8, 4)
plt.title("Dragonfly groups vs. DeepCAM perf.\n(Frontier)", fontproperties=font_prop, fontsize=22)
plt.xticks(fontsize=18)
yticks = [1.0, 2.0, 3.0, 4.0]
ylabels = [f"{val:.1f}" for val in yticks]
plt.yticks(ticks=yticks, labels=ylabels, fontproperties=font_prop, fontsize=18)
plt.grid(True, axis='y', linestyle='--')  # Changed to horizontal dashed grid lines only
# Set x-axis ticks with step size of 1
min_x, max_x = min(x_vals), max(x_vals)
plt.xticks(range(0, 65, 8))
plt.tight_layout()

# plt.savefig("group_vs_time_nanogpt_pm" + '64' + ".png", dpi=300)
plt.savefig("group_vs_time_deepcam_frontier" + '64' + ".pdf")